<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.apollor</groupId>
    <artifactId>Spycer</artifactId>
    <version>1.0</version>
    <name>Spycer</name>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.9.2</junit.version>
        <main-class>com.apollor.spycer.Main</main-class>
        <app.name>Spycer</app.name>
        <app.verson>${project.version}</app.verson>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.17.2</version>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.12</version>
        </dependency>


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.13</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.ipgeolocation</groupId>
            <artifactId>ipgeolocation</artifactId>
            <version>1.0.16</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5 -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>5.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>Spycer-${project.version}</finalName>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.apollor.spycer.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>19</source>
                    <target>19</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>com.apollor.spycer.Main</mainClass>
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                https://github.com/wiverson/jtoolprovider-plugin -->
<!--                <groupId>io.github.wiverson</groupId>-->
<!--                <artifactId>jtoolprovider-plugin</artifactId>-->
<!--                <version>1.0.34</version>-->
<!--                <executions>-->
<!--                    This command runs jlink, generating a custom JVM by combining the JavaFX modules bundled in-->
<!--                    this project with the JDK modules. -->
<!--                    <execution>-->
<!--                        <id>jlink</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>java-tool</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <toolName>jlink</toolName>-->
<!--                            <removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>-->
<!--                            <addModules>${jvm.modules}</addModules>-->
<!--                            <output>${project.build.directory}/jvm-image</output>-->
<!--                            <args>-->
<!--                                <arg>&#45;&#45;strip-native-commands</arg>-->
<!--                                <arg>&#45;&#45;no-header-files</arg>-->
<!--                                <arg>&#45;&#45;strip-debug</arg>-->
<!--                                <arg>&#45;&#45;no-man-pages</arg>-->
<!--                                <arg>&#45;&#45;compress=2</arg>-->
<!--                            </args>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    &lt;!&ndash; The command that actually generates the installer. The options for each platform-->
<!--                    are found the /src/packaging directory. These files are copied into the target directory by-->
<!--                    the Maven resources plugin, which does the filtering to replace the original values with-->
<!--                    the actual Maven properties.-->

<!--                    https://github.com/wiverson/jtoolprovider-plugin/blob/main/java-tool-doc.md-->
<!--                    &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>jpackage</id>-->
<!--                        <phase>install</phase>-->
<!--                        <goals>-->
<!--                            <goal>java-tool</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <toolName>jpackage</toolName>-->
<!--                            <writeOutputToLog>true</writeOutputToLog>-->
<!--                            <writeErrorsToLog>true</writeErrorsToLog>-->
<!--                            <failOnError>true</failOnError>-->
<!--                            <removeDirectories>${project.build.directory}/installer-work</removeDirectories>-->
<!--                            <args>@${project.build.directory}/packaging/${os.detected.name}-jpackage.txt</args>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>maven_central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>
</project>